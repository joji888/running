<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.jsu.zjj.running.receive.dao.ReceiveDao">

    <resultMap type="cn.edu.jsu.zjj.running.receive.entity.Receive" id="ReceiveMap">
        <result property="rId" column="r_id" jdbcType="INTEGER"/>
        <result property="rBeginTime" column="r_begin_time" jdbcType="TIMESTAMP"/>
        <result property="rEndTime" column="r_end_time" jdbcType="TIMESTAMP"/>
        <result property="rSeate" column="r_seate" jdbcType="INTEGER"/>
        <result property="uId" column="u_id" javaType="INTEGER" />
        <result property="ruId" column="ru_id" javaType="INTEGER" />
        <collection property="user" column="u_id" select="cn.edu.jsu.zjj.running.user.dao.UserDao.queryById"/>
        <collection property="rUser" column="ru_id" select="cn.edu.jsu.zjj.running.user.dao.UserDao.queryById"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ReceiveMap">
        select
          r_id, u_id, ru_id, r_begin_time, r_end_time, r_seate
        from receive
        where r_id = #{rId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ReceiveMap">
        select
          r_id, u_id, ru_id, r_begin_time, r_end_time, r_seate
        from receive
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from receive
        <where>
            <if test="rId != null">
                and r_id = #{rId}
            </if>
            <if test="rBeginTime != null">
                and r_begin_time = #{rBeginTime}
            </if>
            <if test="rEndTime != null">
                and r_end_time = #{rEndTime}
            </if>
            <if test="rSeate != null">
                and r_seate = #{rSeate}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="rId" useGeneratedKeys="true">
        insert into receive(u_id, ru_id, r_begin_time, r_end_time, r_seate)
        values (#{uId}, #{ruId}, #{rBeginTime}, #{rEndTime}, #{rSeate})
    </insert>

    <insert id="insertBatch" keyProperty="rId" useGeneratedKeys="true">
        insert into receive(r_begin_time, r_end_time, r_seate)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.rBeginTime}, #{entity.rEndTime}, #{entity.rSeate})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="rId" useGeneratedKeys="true">
        insert into receive(r_begin_time, r_end_time, r_seate)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rBeginTime}, #{entity.rEndTime}, #{entity.rSeate})
        </foreach>
        on duplicate key updatequeryAllByLimit
        r_begin_time = values(r_begin_time),
        r_end_time = values(r_end_time),
        r_seate = values(r_seate)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update receive
        <set>
            <if test="rBeginTime != null">
                r_begin_time = #{rBeginTime},
            </if>
            <if test="rEndTime != null">
                r_end_time = #{rEndTime},
            </if>
            <if test="rSeate != null">
                r_seate = #{rSeate},
            </if>
            <if test="ruId != null">
                ru_id = #{ruId},
            </if>
            <if test="uId != null">
                u_id = #{uId},
            </if>
        </set>
        where r_id = #{rId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from receive where r_id = #{rId}
    </delete>

</mapper>

